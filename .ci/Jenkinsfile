pipeline {
    agent any

    tools {
        nodejs "NodeJS"
    }

    environment {
        IMAGE_NAME = "vitepress-blog"
        CONTAINER_NAME = "blog-caleb-space-vitepress"
        RUNNING_PORT = "30977"
        PROJECT_GIT = "git@github.com:CalebChen768/my-vitepress-site.git"
        POSTS_GIT = "git@github.com:CalebChen768/my-blog-articles.git"
        GITHUB_SSH_KEY_NAME = "github-ssh-key"
    }

    stages {
        stage('Checkout Project Code') {
            steps {
                script {
                    dir("${WORKSPACE}") {
                        checkout([
                            $class: 'GitSCM',
                            branches: [[name: '*/main']],
                            userRemoteConfigs: [[
                                url: PROJECT_GIT,
                                credentialsId: GITHUB_SSH_KEY_NAME
                            ]]
                        ])
                    }
                }
            }
        }

        stage('Checkout Articles') {
            steps {
                script {
                    dir("${WORKSPACE}/posts") {
                        checkout([
                            $class: 'GitSCM',
                            branches: [[name: '*/main']],
                            userRemoteConfigs: [[
                                url: POSTS_GIT,
                                credentialsId: GITHUB_SSH_KEY_NAME
                            ]]
                        ])
                    }
                }
            }
        }

        stage('Ensure Node.js Environment') {
            steps {
                script {
                    sh """
                    node -v
                    npm -v
                    """
                }
            }
        }

        stage('Build VitePress') {
            steps {
                script {
                    dir("${WORKSPACE}") {
                        sh """
                        npm install
                        npm run build
                        """
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir("${WORKSPACE}") {
                        sh """
                        docker build -t ${IMAGE_NAME}:latest -f .ci/Dockerfile .
                        """
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    sh """
                    # stop old container
                    docker stop ${CONTAINER_NAME} || true
                    docker rm ${CONTAINER_NAME} || true

                    # run new container
                    docker run -d -p ${RUNNING_PORT}:80 --name ${CONTAINER_NAME} ${IMAGE_NAME}:latest
                    """
                }
            }
        }
    }

    post {
        success {
            echo "üéâ VitePress ÈÉ®ÁΩ≤ÂÆåÊàêÔºÅ"
        }
        failure {
            echo "‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•ÔºåËØ∑Ê£ÄÊü•Êó•Âøó„ÄÇ"
        }
    }
}
